<?php

namespace flowcode\orm\builder;

require_once dirname(__FILE__) . '/../../../../../src/flowcode/mvc/kernel/Autoloader.class.php';
require_once dirname(__FILE__) . '/../../../../../src/flowcode/orm/builder/MapperBuilder.class.php';

/**
 * Test class for MapperBuilder.
 * Generated by PHPUnit on 2012-09-09 at 14:31:20.
 */
class MapperBuilderTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var MapperBuilder
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new MapperBuilder;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers flowcode\orm\builder\MapperBuilder::buildFromMapping
     */
    public function testBuildFromMapping() {

        $instance = new \flowcode\inter\domain\Poll();

        $mappingFilePath = "/var/www/inter/src/flowcode/inter/config/orm-mapping.xml";
        $mapping = simplexml_load_file($mappingFilePath);

        $mapper = $this->object->buildFromMapping($mapping, get_class($instance));
        
        $this->assertEquals(get_class($instance) ,$mapper->getClass());
        $this->assertEquals("poll" ,$mapper->getTable());
        
    }
    
    public function testBuildFromMapping_Slider() {

        $instance = new \flowcode\inter\domain\Slider();

        $mappingFilePath = "/var/www/inter/src/flowcode/inter/config/orm-mapping.xml";
        $mapping = simplexml_load_file($mappingFilePath);

        $mapper = $this->object->buildFromMapping($mapping, get_class($instance));
        
        $this->assertEquals(get_class($instance) ,$mapper->getClass());
        $this->assertEquals("slider" ,$mapper->getTable());
        
    }
    
    public function testBuildFormMapping_withRelations(){
        $noticia = new \flowcode\inter\domain\Noticia();
        
        $mappingFilePath = "/var/www/inter/src/flowcode/inter/config/orm-mapping.xml";
        $mapping = simplexml_load_file($mappingFilePath);

        $mapper = $this->object->buildFromMapping($mapping, get_class($noticia));
        
        $this->assertEquals(get_class($noticia) ,$mapper->getClass());
        
        $this->assertEquals(1 , count($mapper->getRelations()));
        
    }
    
    public function testBuildFromName() {

        $instance = new \flowcode\inter\domain\Noticia();

        $mappingFilePath = "/var/www/inter/src/flowcode/inter/config/orm-mapping.xml";
        $mapping = simplexml_load_file($mappingFilePath);

        $mapper = $this->object->buildFromName($mapping, "noticia");
        
        $this->assertEquals(get_class($instance) ,$mapper->getClass());
        $this->assertEquals("noticia" ,$mapper->getName());
        
    }

}

?>

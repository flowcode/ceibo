<?php

namespace flowcode\ceibo\domain;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-16 at 20:55:57.
 */
class QueryTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Query
     */
    protected $object;
    private $ovniMapper;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {

        $this->ovniMapper = new Mapper();
        $this->ovniMapper->setClass('flowcode\ceibo\builder\Ovni');
        $this->ovniMapper->setName("ovni");
        $this->ovniMapper->setTable("ovni");


        $this->object = new Query($this->ovniMapper);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers flowcode\ceibo\domain\Query::AndWhere
     * @todo   Implement testAndWhere().
     */
    public function testAndWhere() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers flowcode\ceibo\domain\Query::getString
     * @todo   Implement testGetString().
     */
    public function testGetString() {

        $tag = "test";
        $this->object->AndWhere("Tag.name = '$tag'");

        $expectedQuery = "SELECT * FROM post p , post_tag pt, tag t WHERE 1=1 AND pt.id_post = p.id AND pt.id_tag = t.id AND t.name = '" . $tag . "' ";

        $this->assertEquals($expectedQuery, $this->object->getString());
    }

}

class Ovni {

    private $id;
    private $name;
    private $weapons;

    public function __construct() {
        $this->weapons = array();
    }

    public function getId() {
        return $this->id;
    }

    public function setId($id) {
        $this->id = $id;
    }

    public function getName() {
        return $this->name;
    }

    public function setName($name) {
        $this->name = $name;
    }

    public function getWeapons() {
        return $this->weapons;
    }

    public function setWeapons($weapons) {
        $this->weapons = $weapons;
    }

    public function addWeapon(Weapon $weapon) {
        $this->weapons[] = $weapon;
    }

}
